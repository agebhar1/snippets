---
name: CI
permissions: {}

on: [ push ]
jobs:
  build-java:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        javaVersion: [ "17", "21" ]
        javaDistribution: [ "temurin", "zulu" ]
        pgDockerTag: [ "17.0", "16.4", "15.8", "14.13", "13.16", "12.20" ]
    name: Java ${{ matrix.javaVersion }}-${{ matrix.javaDistribution }} w/ PostgreSQL ${{ matrix.pgDockerTag }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: ${{ matrix.javaDistribution }}
          java-version: ${{ matrix.javaVersion }}
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - run: mvn test --no-transfer-progress --file spring-boot/pom.xml -DargLine="-Dspring.datasource.url=jdbc:tc:postgresql:${{ matrix.pgDockerTag }}:///"
  diKTat:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - run: mvn diktat:check --no-transfer-progress --file spring-boot/pom.xml
